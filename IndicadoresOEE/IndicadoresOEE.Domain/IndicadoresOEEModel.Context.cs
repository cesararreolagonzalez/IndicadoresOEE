//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IndicadoresOEE.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PrimaryConnection : DbContext
    {
        public PrimaryConnection() : base("name=PrimaryConnection")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Almacen> Almacen { get; set; }
        public virtual DbSet<Almacen_UnidadMedida> Almacen_UnidadMedida { get; set; }
        public virtual DbSet<Bitacora> Bitacora { get; set; }
        public virtual DbSet<Centro> Centro { get; set; }
        public virtual DbSet<Departamento> Departamento { get; set; }
        public virtual DbSet<Equipo> Equipo { get; set; }
        public virtual DbSet<Indicador> Indicador { get; set; }
        public virtual DbSet<Indicador_Capacidad> Indicador_Capacidad { get; set; }
        public virtual DbSet<Indicador_Laboratorio> Indicador_Laboratorio { get; set; }
        public virtual DbSet<Indicador_Paro> Indicador_Paro { get; set; }
        public virtual DbSet<Indicador_Rechazo> Indicador_Rechazo { get; set; }
        public virtual DbSet<Indicador_Tiempo> Indicador_Tiempo { get; set; }
        public virtual DbSet<Indicador_V2> Indicador_V2 { get; set; }
        public virtual DbSet<IndicadorParo_V2> IndicadorParo_V2 { get; set; }
        public virtual DbSet<IndicadorRechazo_V2> IndicadorRechazo_V2 { get; set; }
        public virtual DbSet<IndicadorTiempo_V2> IndicadorTiempo_V2 { get; set; }
        public virtual DbSet<IndicadorVelocidad_V2> IndicadorVelocidad_V2 { get; set; }
        public virtual DbSet<Laboratorio> Laboratorio { get; set; }
        public virtual DbSet<Linea> Linea { get; set; }
        public virtual DbSet<Logs> Logs { get; set; }
        public virtual DbSet<Paro> Paro { get; set; }
        public virtual DbSet<ParosPlaneadosMes_V2> ParosPlaneadosMes_V2 { get; set; }
        public virtual DbSet<ParosPlanificados_V2> ParosPlanificados_V2 { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<Planta> Planta { get; set; }
        public virtual DbSet<Proceso> Proceso { get; set; }
        public virtual DbSet<Proceso_UsuariosMensaje> Proceso_UsuariosMensaje { get; set; }
        public virtual DbSet<Proceso_Velocidad> Proceso_Velocidad { get; set; }
        public virtual DbSet<Rechazo> Rechazo { get; set; }
        public virtual DbSet<Seccion> Seccion { get; set; }
        public virtual DbSet<Servicio> Servicio { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TipoAlmacen> TipoAlmacen { get; set; }
        public virtual DbSet<UnidadMedida> UnidadMedida { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<UsuarioCapacidad> UsuarioCapacidad { get; set; }
        public virtual DbSet<Equipo_Servicio> Equipo_Servicio { get; set; }
        public virtual DbSet<Indicador_Servicio> Indicador_Servicio { get; set; }
        public virtual DbSet<vw_grafica_indicadores> vw_grafica_indicadores { get; set; }
        public virtual DbSet<vw_grafica_indicadores_paros_programados> vw_grafica_indicadores_paros_programados { get; set; }
        public virtual DbSet<vw_grafica_indicadores_paros_programados_V2> vw_grafica_indicadores_paros_programados_V2 { get; set; }
        public virtual DbSet<vw_grafica_indicadores_V2> vw_grafica_indicadores_V2 { get; set; }
        public virtual DbSet<vw_paros> vw_paros { get; set; }
        public virtual DbSet<vw_paros_programados> vw_paros_programados { get; set; }
        public virtual DbSet<vw_paros_programados_V2> vw_paros_programados_V2 { get; set; }
        public virtual DbSet<vw_paros_V2> vw_paros_V2 { get; set; }
        public virtual DbSet<vw_usuarios> vw_usuarios { get; set; }
        public virtual DbSet<vw_usuarios_procesos> vw_usuarios_procesos { get; set; }
    
        [DbFunction("PrimaryConnection", "fn_acum_paros")]
        public virtual IQueryable<fn_acum_paros_Result> fn_acum_paros(Nullable<System.DateTime> fecha_inicial, Nullable<System.DateTime> fecha_final, string turno_inicial, string turno_final)
        {
            var fecha_inicialParameter = fecha_inicial.HasValue ?
                new ObjectParameter("fecha_inicial", fecha_inicial) :
                new ObjectParameter("fecha_inicial", typeof(System.DateTime));
    
            var fecha_finalParameter = fecha_final.HasValue ?
                new ObjectParameter("fecha_final", fecha_final) :
                new ObjectParameter("fecha_final", typeof(System.DateTime));
    
            var turno_inicialParameter = turno_inicial != null ?
                new ObjectParameter("turno_inicial", turno_inicial) :
                new ObjectParameter("turno_inicial", typeof(string));
    
            var turno_finalParameter = turno_final != null ?
                new ObjectParameter("turno_final", turno_final) :
                new ObjectParameter("turno_final", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_acum_paros_Result>("[PrimaryConnection].[fn_acum_paros](@fecha_inicial, @fecha_final, @turno_inicial, @turno_final)", fecha_inicialParameter, fecha_finalParameter, turno_inicialParameter, turno_finalParameter);
        }
    
        [DbFunction("PrimaryConnection", "fn_acum_paros2")]
        public virtual IQueryable<fn_acum_paros2_Result> fn_acum_paros2(Nullable<System.DateTime> fecha_inicial, Nullable<System.DateTime> fecha_final, string turno_inicial, string turno_final, Nullable<long> id_proceso)
        {
            var fecha_inicialParameter = fecha_inicial.HasValue ?
                new ObjectParameter("fecha_inicial", fecha_inicial) :
                new ObjectParameter("fecha_inicial", typeof(System.DateTime));
    
            var fecha_finalParameter = fecha_final.HasValue ?
                new ObjectParameter("fecha_final", fecha_final) :
                new ObjectParameter("fecha_final", typeof(System.DateTime));
    
            var turno_inicialParameter = turno_inicial != null ?
                new ObjectParameter("turno_inicial", turno_inicial) :
                new ObjectParameter("turno_inicial", typeof(string));
    
            var turno_finalParameter = turno_final != null ?
                new ObjectParameter("turno_final", turno_final) :
                new ObjectParameter("turno_final", typeof(string));
    
            var id_procesoParameter = id_proceso.HasValue ?
                new ObjectParameter("id_proceso", id_proceso) :
                new ObjectParameter("id_proceso", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_acum_paros2_Result>("[PrimaryConnection].[fn_acum_paros2](@fecha_inicial, @fecha_final, @turno_inicial, @turno_final, @id_proceso)", fecha_inicialParameter, fecha_finalParameter, turno_inicialParameter, turno_finalParameter, id_procesoParameter);
        }
    
        [DbFunction("PrimaryConnection", "fn_sumatoria_paro")]
        public virtual IQueryable<fn_sumatoria_paro_Result> fn_sumatoria_paro(string fecha_Inicio, string fecha_Fin, string turno_Inicio, string turno_Fin, Nullable<long> velocidad)
        {
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var turno_InicioParameter = turno_Inicio != null ?
                new ObjectParameter("Turno_Inicio", turno_Inicio) :
                new ObjectParameter("Turno_Inicio", typeof(string));
    
            var turno_FinParameter = turno_Fin != null ?
                new ObjectParameter("Turno_Fin", turno_Fin) :
                new ObjectParameter("Turno_Fin", typeof(string));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("velocidad", velocidad) :
                new ObjectParameter("velocidad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_sumatoria_paro_Result>("[PrimaryConnection].[fn_sumatoria_paro](@Fecha_Inicio, @Fecha_Fin, @Turno_Inicio, @Turno_Fin, @velocidad)", fecha_InicioParameter, fecha_FinParameter, turno_InicioParameter, turno_FinParameter, velocidadParameter);
        }
    
        [DbFunction("PrimaryConnection", "fn_sumatoria_paro_folio")]
        public virtual IQueryable<fn_sumatoria_paro_folio_Result> fn_sumatoria_paro_folio(string fecha_Inicio, string fecha_Fin, string turno_Inicio, string turno_Fin, Nullable<long> velocidad)
        {
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var turno_InicioParameter = turno_Inicio != null ?
                new ObjectParameter("Turno_Inicio", turno_Inicio) :
                new ObjectParameter("Turno_Inicio", typeof(string));
    
            var turno_FinParameter = turno_Fin != null ?
                new ObjectParameter("Turno_Fin", turno_Fin) :
                new ObjectParameter("Turno_Fin", typeof(string));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("velocidad", velocidad) :
                new ObjectParameter("velocidad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_sumatoria_paro_folio_Result>("[PrimaryConnection].[fn_sumatoria_paro_folio](@Fecha_Inicio, @Fecha_Fin, @Turno_Inicio, @Turno_Fin, @velocidad)", fecha_InicioParameter, fecha_FinParameter, turno_InicioParameter, turno_FinParameter, velocidadParameter);
        }
    
        [DbFunction("PrimaryConnection", "fn_sumatoria_paro_folio_fechas")]
        public virtual IQueryable<fn_sumatoria_paro_folio_fechas_Result> fn_sumatoria_paro_folio_fechas(string fecha_Inicio, string fecha_Fin, string turno_Inicio, string turno_Fin, Nullable<long> velocidad)
        {
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var turno_InicioParameter = turno_Inicio != null ?
                new ObjectParameter("Turno_Inicio", turno_Inicio) :
                new ObjectParameter("Turno_Inicio", typeof(string));
    
            var turno_FinParameter = turno_Fin != null ?
                new ObjectParameter("Turno_Fin", turno_Fin) :
                new ObjectParameter("Turno_Fin", typeof(string));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("velocidad", velocidad) :
                new ObjectParameter("velocidad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_sumatoria_paro_folio_fechas_Result>("[PrimaryConnection].[fn_sumatoria_paro_folio_fechas](@Fecha_Inicio, @Fecha_Fin, @Turno_Inicio, @Turno_Fin, @velocidad)", fecha_InicioParameter, fecha_FinParameter, turno_InicioParameter, turno_FinParameter, velocidadParameter);
        }
    
        [DbFunction("PrimaryConnection", "fn_sumatoria_paro_folio_fechas_V2")]
        public virtual IQueryable<fn_sumatoria_paro_folio_fechas_V2_Result> fn_sumatoria_paro_folio_fechas_V2(string fecha_Inicio, string fecha_Fin, string turno_Inicio, string turno_Fin, Nullable<long> velocidad)
        {
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var turno_InicioParameter = turno_Inicio != null ?
                new ObjectParameter("Turno_Inicio", turno_Inicio) :
                new ObjectParameter("Turno_Inicio", typeof(string));
    
            var turno_FinParameter = turno_Fin != null ?
                new ObjectParameter("Turno_Fin", turno_Fin) :
                new ObjectParameter("Turno_Fin", typeof(string));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("velocidad", velocidad) :
                new ObjectParameter("velocidad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_sumatoria_paro_folio_fechas_V2_Result>("[PrimaryConnection].[fn_sumatoria_paro_folio_fechas_V2](@Fecha_Inicio, @Fecha_Fin, @Turno_Inicio, @Turno_Fin, @velocidad)", fecha_InicioParameter, fecha_FinParameter, turno_InicioParameter, turno_FinParameter, velocidadParameter);
        }
    
        [DbFunction("PrimaryConnection", "fn_sumatoria_paro_folio_V2")]
        public virtual IQueryable<fn_sumatoria_paro_folio_V2_Result> fn_sumatoria_paro_folio_V2(string fecha_Inicio, string fecha_Fin, string turno_Inicio, string turno_Fin, Nullable<long> velocidad)
        {
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var turno_InicioParameter = turno_Inicio != null ?
                new ObjectParameter("Turno_Inicio", turno_Inicio) :
                new ObjectParameter("Turno_Inicio", typeof(string));
    
            var turno_FinParameter = turno_Fin != null ?
                new ObjectParameter("Turno_Fin", turno_Fin) :
                new ObjectParameter("Turno_Fin", typeof(string));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("velocidad", velocidad) :
                new ObjectParameter("velocidad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_sumatoria_paro_folio_V2_Result>("[PrimaryConnection].[fn_sumatoria_paro_folio_V2](@Fecha_Inicio, @Fecha_Fin, @Turno_Inicio, @Turno_Fin, @velocidad)", fecha_InicioParameter, fecha_FinParameter, turno_InicioParameter, turno_FinParameter, velocidadParameter);
        }
    
        [DbFunction("PrimaryConnection", "fn_sumatoria_paro_V2")]
        public virtual IQueryable<fn_sumatoria_paro_V2_Result> fn_sumatoria_paro_V2(string fecha_Inicio, string fecha_Fin, string turno_Inicio, string turno_Fin, Nullable<long> velocidad)
        {
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var turno_InicioParameter = turno_Inicio != null ?
                new ObjectParameter("Turno_Inicio", turno_Inicio) :
                new ObjectParameter("Turno_Inicio", typeof(string));
    
            var turno_FinParameter = turno_Fin != null ?
                new ObjectParameter("Turno_Fin", turno_Fin) :
                new ObjectParameter("Turno_Fin", typeof(string));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("velocidad", velocidad) :
                new ObjectParameter("velocidad", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_sumatoria_paro_V2_Result>("[PrimaryConnection].[fn_sumatoria_paro_V2](@Fecha_Inicio, @Fecha_Fin, @Turno_Inicio, @Turno_Fin, @velocidad)", fecha_InicioParameter, fecha_FinParameter, turno_InicioParameter, turno_FinParameter, velocidadParameter);
        }
    
        public virtual int spr_grafica_indicadores_paros_programados(string fechainicial, string fechafinal, string turnoinicial, string turnofinal, string agrupador, string conturno, Nullable<int> velocidad, string procesos)
        {
            var fechainicialParameter = fechainicial != null ?
                new ObjectParameter("fechainicial", fechainicial) :
                new ObjectParameter("fechainicial", typeof(string));
    
            var fechafinalParameter = fechafinal != null ?
                new ObjectParameter("fechafinal", fechafinal) :
                new ObjectParameter("fechafinal", typeof(string));
    
            var turnoinicialParameter = turnoinicial != null ?
                new ObjectParameter("turnoinicial", turnoinicial) :
                new ObjectParameter("turnoinicial", typeof(string));
    
            var turnofinalParameter = turnofinal != null ?
                new ObjectParameter("turnofinal", turnofinal) :
                new ObjectParameter("turnofinal", typeof(string));
    
            var agrupadorParameter = agrupador != null ?
                new ObjectParameter("agrupador", agrupador) :
                new ObjectParameter("agrupador", typeof(string));
    
            var conturnoParameter = conturno != null ?
                new ObjectParameter("conturno", conturno) :
                new ObjectParameter("conturno", typeof(string));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("velocidad", velocidad) :
                new ObjectParameter("velocidad", typeof(int));
    
            var procesosParameter = procesos != null ?
                new ObjectParameter("procesos", procesos) :
                new ObjectParameter("procesos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_grafica_indicadores_paros_programados", fechainicialParameter, fechafinalParameter, turnoinicialParameter, turnofinalParameter, agrupadorParameter, conturnoParameter, velocidadParameter, procesosParameter);
        }
    
        public virtual int spr_grafica_paros(string fechainicial, string fechafinal, string agrupador, string procesos, string paros)
        {
            var fechainicialParameter = fechainicial != null ?
                new ObjectParameter("fechainicial", fechainicial) :
                new ObjectParameter("fechainicial", typeof(string));
    
            var fechafinalParameter = fechafinal != null ?
                new ObjectParameter("fechafinal", fechafinal) :
                new ObjectParameter("fechafinal", typeof(string));
    
            var agrupadorParameter = agrupador != null ?
                new ObjectParameter("agrupador", agrupador) :
                new ObjectParameter("agrupador", typeof(string));
    
            var procesosParameter = procesos != null ?
                new ObjectParameter("procesos", procesos) :
                new ObjectParameter("procesos", typeof(string));
    
            var parosParameter = paros != null ?
                new ObjectParameter("paros", paros) :
                new ObjectParameter("paros", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_grafica_paros", fechainicialParameter, fechafinalParameter, agrupadorParameter, procesosParameter, parosParameter);
        }
    
        public virtual int spr_grafica_parosV2(string fechainicial, string fechafinal, string agrupador, string procesos, string paros)
        {
            var fechainicialParameter = fechainicial != null ?
                new ObjectParameter("fechainicial", fechainicial) :
                new ObjectParameter("fechainicial", typeof(string));
    
            var fechafinalParameter = fechafinal != null ?
                new ObjectParameter("fechafinal", fechafinal) :
                new ObjectParameter("fechafinal", typeof(string));
    
            var agrupadorParameter = agrupador != null ?
                new ObjectParameter("agrupador", agrupador) :
                new ObjectParameter("agrupador", typeof(string));
    
            var procesosParameter = procesos != null ?
                new ObjectParameter("procesos", procesos) :
                new ObjectParameter("procesos", typeof(string));
    
            var parosParameter = paros != null ?
                new ObjectParameter("paros", paros) :
                new ObjectParameter("paros", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_grafica_parosV2", fechainicialParameter, fechafinalParameter, agrupadorParameter, procesosParameter, parosParameter);
        }
    }
}
